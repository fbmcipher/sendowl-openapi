<?php
/**
 * Order
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SendOwl API
 *
 * The SendOwl API allows third party applications to access and update data associated with customer accounts.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.57
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * Order Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Order implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Order';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
        'state' => 'string',
        'gateway' => 'string',
        'payment_method' => 'string',
        'buyer_email' => 'string',
        'paypal_email' => 'string',
        'buyer_name' => 'string',
        'giftee_name' => 'string',
        'giftee_email' => 'string',
        'gift_deliver_at' => '\DateTime',
        'business_name' => 'string',
        'business_vat_number' => 'string',
        'shipping_address1' => 'string',
        'shipping_address2' => 'string',
        'shipping_city' => 'string',
        'shipping_region' => 'string',
        'shipping_postcode' => 'string',
        'shipping_country' => 'string',
        'billing_address1' => 'string',
        'billing_address2' => 'string',
        'billing_city' => 'string',
        'billing_region' => 'string',
        'billing_postcode' => 'string',
        'billing_country' => 'string',
        'eu_resolved_country' => 'string',
        'buyer_ip_address' => 'string',
        'settled_currency' => 'string',
        'settled_gross' => 'float',
        'settled_gateway_fee' => 'float',
        'settled_tax' => 'float',
        'accounted_tax' => 'float',
        'settled_handling' => 'float',
        'settled_shipping' => 'float',
        'settled_affiliate_fee' => 'float',
        'discount' => 'float',
        'price_at_checkout' => 'float',
        'refunded' => 'bool',
        'affiliate_system' => 'string',
        'can_market_to_buyer' => 'bool',
        'gateway_transaction_ids' => 'string[]',
        'order_name' => 'string',
        'download_url' => 'string',
        'subscription_management_url' => 'string',
        'valid_until' => '\DateTime',
        'download_attempts' => 'int',
        'access_allowed' => 'bool',
        'dispatched_at' => '\DateTime',
        'tag' => 'string',
        'order_custom_checkout_fields' => 'object[]',
        'download_items' => 'object[]',
        'downloads' => 'object[]',
        'created_at' => '\DateTime',
        'updated_at' => '\DateTime'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
        'state' => null,
        'gateway' => null,
        'payment_method' => null,
        'buyer_email' => null,
        'paypal_email' => null,
        'buyer_name' => null,
        'giftee_name' => null,
        'giftee_email' => null,
        'gift_deliver_at' => 'date-time',
        'business_name' => null,
        'business_vat_number' => null,
        'shipping_address1' => null,
        'shipping_address2' => null,
        'shipping_city' => null,
        'shipping_region' => null,
        'shipping_postcode' => null,
        'shipping_country' => null,
        'billing_address1' => null,
        'billing_address2' => null,
        'billing_city' => null,
        'billing_region' => null,
        'billing_postcode' => null,
        'billing_country' => null,
        'eu_resolved_country' => null,
        'buyer_ip_address' => null,
        'settled_currency' => null,
        'settled_gross' => 'float',
        'settled_gateway_fee' => 'float',
        'settled_tax' => 'float',
        'accounted_tax' => 'float',
        'settled_handling' => 'float',
        'settled_shipping' => 'float',
        'settled_affiliate_fee' => 'float',
        'discount' => 'float',
        'price_at_checkout' => 'float',
        'refunded' => null,
        'affiliate_system' => null,
        'can_market_to_buyer' => null,
        'gateway_transaction_ids' => null,
        'order_name' => null,
        'download_url' => null,
        'subscription_management_url' => null,
        'valid_until' => 'date-time',
        'download_attempts' => null,
        'access_allowed' => null,
        'dispatched_at' => 'date-time',
        'tag' => null,
        'order_custom_checkout_fields' => null,
        'download_items' => null,
        'downloads' => null,
        'created_at' => 'date-time',
        'updated_at' => 'date-time'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'state' => 'state',
        'gateway' => 'gateway',
        'payment_method' => 'payment_method',
        'buyer_email' => 'buyer_email',
        'paypal_email' => 'paypal_email',
        'buyer_name' => 'buyer_name',
        'giftee_name' => 'giftee_name',
        'giftee_email' => 'giftee_email',
        'gift_deliver_at' => 'gift_deliver_at',
        'business_name' => 'business_name',
        'business_vat_number' => 'business_vat_number',
        'shipping_address1' => 'shipping_address1',
        'shipping_address2' => 'shipping_address2',
        'shipping_city' => 'shipping_city',
        'shipping_region' => 'shipping_region',
        'shipping_postcode' => 'shipping_postcode',
        'shipping_country' => 'shipping_country',
        'billing_address1' => 'billing_address1',
        'billing_address2' => 'billing_address2',
        'billing_city' => 'billing_city',
        'billing_region' => 'billing_region',
        'billing_postcode' => 'billing_postcode',
        'billing_country' => 'billing_country',
        'eu_resolved_country' => 'eu_resolved_country',
        'buyer_ip_address' => 'buyer_ip_address',
        'settled_currency' => 'settled_currency',
        'settled_gross' => 'settled_gross',
        'settled_gateway_fee' => 'settled_gateway_fee',
        'settled_tax' => 'settled_tax',
        'accounted_tax' => 'accounted_tax',
        'settled_handling' => 'settled_handling',
        'settled_shipping' => 'settled_shipping',
        'settled_affiliate_fee' => 'settled_affiliate_fee',
        'discount' => 'discount',
        'price_at_checkout' => 'price_at_checkout',
        'refunded' => 'refunded',
        'affiliate_system' => 'affiliate_system',
        'can_market_to_buyer' => 'can_market_to_buyer',
        'gateway_transaction_ids' => 'gateway_transaction_ids',
        'order_name' => 'order_name',
        'download_url' => 'download_url',
        'subscription_management_url' => 'subscription_management_url',
        'valid_until' => 'valid_until',
        'download_attempts' => 'download_attempts',
        'access_allowed' => 'access_allowed',
        'dispatched_at' => 'dispatched_at',
        'tag' => 'tag',
        'order_custom_checkout_fields' => 'order_custom_checkout_fields',
        'download_items' => 'download_items',
        'downloads' => 'downloads',
        'created_at' => 'created_at',
        'updated_at' => 'updated_at'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'state' => 'setState',
        'gateway' => 'setGateway',
        'payment_method' => 'setPaymentMethod',
        'buyer_email' => 'setBuyerEmail',
        'paypal_email' => 'setPaypalEmail',
        'buyer_name' => 'setBuyerName',
        'giftee_name' => 'setGifteeName',
        'giftee_email' => 'setGifteeEmail',
        'gift_deliver_at' => 'setGiftDeliverAt',
        'business_name' => 'setBusinessName',
        'business_vat_number' => 'setBusinessVatNumber',
        'shipping_address1' => 'setShippingAddress1',
        'shipping_address2' => 'setShippingAddress2',
        'shipping_city' => 'setShippingCity',
        'shipping_region' => 'setShippingRegion',
        'shipping_postcode' => 'setShippingPostcode',
        'shipping_country' => 'setShippingCountry',
        'billing_address1' => 'setBillingAddress1',
        'billing_address2' => 'setBillingAddress2',
        'billing_city' => 'setBillingCity',
        'billing_region' => 'setBillingRegion',
        'billing_postcode' => 'setBillingPostcode',
        'billing_country' => 'setBillingCountry',
        'eu_resolved_country' => 'setEuResolvedCountry',
        'buyer_ip_address' => 'setBuyerIpAddress',
        'settled_currency' => 'setSettledCurrency',
        'settled_gross' => 'setSettledGross',
        'settled_gateway_fee' => 'setSettledGatewayFee',
        'settled_tax' => 'setSettledTax',
        'accounted_tax' => 'setAccountedTax',
        'settled_handling' => 'setSettledHandling',
        'settled_shipping' => 'setSettledShipping',
        'settled_affiliate_fee' => 'setSettledAffiliateFee',
        'discount' => 'setDiscount',
        'price_at_checkout' => 'setPriceAtCheckout',
        'refunded' => 'setRefunded',
        'affiliate_system' => 'setAffiliateSystem',
        'can_market_to_buyer' => 'setCanMarketToBuyer',
        'gateway_transaction_ids' => 'setGatewayTransactionIds',
        'order_name' => 'setOrderName',
        'download_url' => 'setDownloadUrl',
        'subscription_management_url' => 'setSubscriptionManagementUrl',
        'valid_until' => 'setValidUntil',
        'download_attempts' => 'setDownloadAttempts',
        'access_allowed' => 'setAccessAllowed',
        'dispatched_at' => 'setDispatchedAt',
        'tag' => 'setTag',
        'order_custom_checkout_fields' => 'setOrderCustomCheckoutFields',
        'download_items' => 'setDownloadItems',
        'downloads' => 'setDownloads',
        'created_at' => 'setCreatedAt',
        'updated_at' => 'setUpdatedAt'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'state' => 'getState',
        'gateway' => 'getGateway',
        'payment_method' => 'getPaymentMethod',
        'buyer_email' => 'getBuyerEmail',
        'paypal_email' => 'getPaypalEmail',
        'buyer_name' => 'getBuyerName',
        'giftee_name' => 'getGifteeName',
        'giftee_email' => 'getGifteeEmail',
        'gift_deliver_at' => 'getGiftDeliverAt',
        'business_name' => 'getBusinessName',
        'business_vat_number' => 'getBusinessVatNumber',
        'shipping_address1' => 'getShippingAddress1',
        'shipping_address2' => 'getShippingAddress2',
        'shipping_city' => 'getShippingCity',
        'shipping_region' => 'getShippingRegion',
        'shipping_postcode' => 'getShippingPostcode',
        'shipping_country' => 'getShippingCountry',
        'billing_address1' => 'getBillingAddress1',
        'billing_address2' => 'getBillingAddress2',
        'billing_city' => 'getBillingCity',
        'billing_region' => 'getBillingRegion',
        'billing_postcode' => 'getBillingPostcode',
        'billing_country' => 'getBillingCountry',
        'eu_resolved_country' => 'getEuResolvedCountry',
        'buyer_ip_address' => 'getBuyerIpAddress',
        'settled_currency' => 'getSettledCurrency',
        'settled_gross' => 'getSettledGross',
        'settled_gateway_fee' => 'getSettledGatewayFee',
        'settled_tax' => 'getSettledTax',
        'accounted_tax' => 'getAccountedTax',
        'settled_handling' => 'getSettledHandling',
        'settled_shipping' => 'getSettledShipping',
        'settled_affiliate_fee' => 'getSettledAffiliateFee',
        'discount' => 'getDiscount',
        'price_at_checkout' => 'getPriceAtCheckout',
        'refunded' => 'getRefunded',
        'affiliate_system' => 'getAffiliateSystem',
        'can_market_to_buyer' => 'getCanMarketToBuyer',
        'gateway_transaction_ids' => 'getGatewayTransactionIds',
        'order_name' => 'getOrderName',
        'download_url' => 'getDownloadUrl',
        'subscription_management_url' => 'getSubscriptionManagementUrl',
        'valid_until' => 'getValidUntil',
        'download_attempts' => 'getDownloadAttempts',
        'access_allowed' => 'getAccessAllowed',
        'dispatched_at' => 'getDispatchedAt',
        'tag' => 'getTag',
        'order_custom_checkout_fields' => 'getOrderCustomCheckoutFields',
        'download_items' => 'getDownloadItems',
        'downloads' => 'getDownloads',
        'created_at' => 'getCreatedAt',
        'updated_at' => 'getUpdatedAt'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['state'] = isset($data['state']) ? $data['state'] : null;
        $this->container['gateway'] = isset($data['gateway']) ? $data['gateway'] : null;
        $this->container['payment_method'] = isset($data['payment_method']) ? $data['payment_method'] : null;
        $this->container['buyer_email'] = isset($data['buyer_email']) ? $data['buyer_email'] : null;
        $this->container['paypal_email'] = isset($data['paypal_email']) ? $data['paypal_email'] : null;
        $this->container['buyer_name'] = isset($data['buyer_name']) ? $data['buyer_name'] : null;
        $this->container['giftee_name'] = isset($data['giftee_name']) ? $data['giftee_name'] : null;
        $this->container['giftee_email'] = isset($data['giftee_email']) ? $data['giftee_email'] : null;
        $this->container['gift_deliver_at'] = isset($data['gift_deliver_at']) ? $data['gift_deliver_at'] : null;
        $this->container['business_name'] = isset($data['business_name']) ? $data['business_name'] : null;
        $this->container['business_vat_number'] = isset($data['business_vat_number']) ? $data['business_vat_number'] : null;
        $this->container['shipping_address1'] = isset($data['shipping_address1']) ? $data['shipping_address1'] : null;
        $this->container['shipping_address2'] = isset($data['shipping_address2']) ? $data['shipping_address2'] : null;
        $this->container['shipping_city'] = isset($data['shipping_city']) ? $data['shipping_city'] : null;
        $this->container['shipping_region'] = isset($data['shipping_region']) ? $data['shipping_region'] : null;
        $this->container['shipping_postcode'] = isset($data['shipping_postcode']) ? $data['shipping_postcode'] : null;
        $this->container['shipping_country'] = isset($data['shipping_country']) ? $data['shipping_country'] : null;
        $this->container['billing_address1'] = isset($data['billing_address1']) ? $data['billing_address1'] : null;
        $this->container['billing_address2'] = isset($data['billing_address2']) ? $data['billing_address2'] : null;
        $this->container['billing_city'] = isset($data['billing_city']) ? $data['billing_city'] : null;
        $this->container['billing_region'] = isset($data['billing_region']) ? $data['billing_region'] : null;
        $this->container['billing_postcode'] = isset($data['billing_postcode']) ? $data['billing_postcode'] : null;
        $this->container['billing_country'] = isset($data['billing_country']) ? $data['billing_country'] : null;
        $this->container['eu_resolved_country'] = isset($data['eu_resolved_country']) ? $data['eu_resolved_country'] : null;
        $this->container['buyer_ip_address'] = isset($data['buyer_ip_address']) ? $data['buyer_ip_address'] : null;
        $this->container['settled_currency'] = isset($data['settled_currency']) ? $data['settled_currency'] : null;
        $this->container['settled_gross'] = isset($data['settled_gross']) ? $data['settled_gross'] : null;
        $this->container['settled_gateway_fee'] = isset($data['settled_gateway_fee']) ? $data['settled_gateway_fee'] : null;
        $this->container['settled_tax'] = isset($data['settled_tax']) ? $data['settled_tax'] : null;
        $this->container['accounted_tax'] = isset($data['accounted_tax']) ? $data['accounted_tax'] : null;
        $this->container['settled_handling'] = isset($data['settled_handling']) ? $data['settled_handling'] : null;
        $this->container['settled_shipping'] = isset($data['settled_shipping']) ? $data['settled_shipping'] : null;
        $this->container['settled_affiliate_fee'] = isset($data['settled_affiliate_fee']) ? $data['settled_affiliate_fee'] : null;
        $this->container['discount'] = isset($data['discount']) ? $data['discount'] : null;
        $this->container['price_at_checkout'] = isset($data['price_at_checkout']) ? $data['price_at_checkout'] : null;
        $this->container['refunded'] = isset($data['refunded']) ? $data['refunded'] : null;
        $this->container['affiliate_system'] = isset($data['affiliate_system']) ? $data['affiliate_system'] : null;
        $this->container['can_market_to_buyer'] = isset($data['can_market_to_buyer']) ? $data['can_market_to_buyer'] : null;
        $this->container['gateway_transaction_ids'] = isset($data['gateway_transaction_ids']) ? $data['gateway_transaction_ids'] : null;
        $this->container['order_name'] = isset($data['order_name']) ? $data['order_name'] : null;
        $this->container['download_url'] = isset($data['download_url']) ? $data['download_url'] : null;
        $this->container['subscription_management_url'] = isset($data['subscription_management_url']) ? $data['subscription_management_url'] : null;
        $this->container['valid_until'] = isset($data['valid_until']) ? $data['valid_until'] : null;
        $this->container['download_attempts'] = isset($data['download_attempts']) ? $data['download_attempts'] : null;
        $this->container['access_allowed'] = isset($data['access_allowed']) ? $data['access_allowed'] : null;
        $this->container['dispatched_at'] = isset($data['dispatched_at']) ? $data['dispatched_at'] : null;
        $this->container['tag'] = isset($data['tag']) ? $data['tag'] : null;
        $this->container['order_custom_checkout_fields'] = isset($data['order_custom_checkout_fields']) ? $data['order_custom_checkout_fields'] : null;
        $this->container['download_items'] = isset($data['download_items']) ? $data['download_items'] : null;
        $this->container['downloads'] = isset($data['downloads']) ? $data['downloads'] : null;
        $this->container['created_at'] = isset($data['created_at']) ? $data['created_at'] : null;
        $this->container['updated_at'] = isset($data['updated_at']) ? $data['updated_at'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets state
     *
     * @return string
     */
    public function getState()
    {
        return $this->container['state'];
    }

    /**
     * Sets state
     *
     * @param string $state state
     *
     * @return $this
     */
    public function setState($state)
    {
        $this->container['state'] = $state;

        return $this;
    }

    /**
     * Gets gateway
     *
     * @return string
     */
    public function getGateway()
    {
        return $this->container['gateway'];
    }

    /**
     * Sets gateway
     *
     * @param string $gateway gateway
     *
     * @return $this
     */
    public function setGateway($gateway)
    {
        $this->container['gateway'] = $gateway;

        return $this;
    }

    /**
     * Gets payment_method
     *
     * @return string
     */
    public function getPaymentMethod()
    {
        return $this->container['payment_method'];
    }

    /**
     * Sets payment_method
     *
     * @param string $payment_method payment_method
     *
     * @return $this
     */
    public function setPaymentMethod($payment_method)
    {
        $this->container['payment_method'] = $payment_method;

        return $this;
    }

    /**
     * Gets buyer_email
     *
     * @return string
     */
    public function getBuyerEmail()
    {
        return $this->container['buyer_email'];
    }

    /**
     * Sets buyer_email
     *
     * @param string $buyer_email buyer_email
     *
     * @return $this
     */
    public function setBuyerEmail($buyer_email)
    {
        $this->container['buyer_email'] = $buyer_email;

        return $this;
    }

    /**
     * Gets paypal_email
     *
     * @return string
     */
    public function getPaypalEmail()
    {
        return $this->container['paypal_email'];
    }

    /**
     * Sets paypal_email
     *
     * @param string $paypal_email paypal_email
     *
     * @return $this
     */
    public function setPaypalEmail($paypal_email)
    {
        $this->container['paypal_email'] = $paypal_email;

        return $this;
    }

    /**
     * Gets buyer_name
     *
     * @return string
     */
    public function getBuyerName()
    {
        return $this->container['buyer_name'];
    }

    /**
     * Sets buyer_name
     *
     * @param string $buyer_name buyer_name
     *
     * @return $this
     */
    public function setBuyerName($buyer_name)
    {
        $this->container['buyer_name'] = $buyer_name;

        return $this;
    }

    /**
     * Gets giftee_name
     *
     * @return string
     */
    public function getGifteeName()
    {
        return $this->container['giftee_name'];
    }

    /**
     * Sets giftee_name
     *
     * @param string $giftee_name giftee_name
     *
     * @return $this
     */
    public function setGifteeName($giftee_name)
    {
        $this->container['giftee_name'] = $giftee_name;

        return $this;
    }

    /**
     * Gets giftee_email
     *
     * @return string
     */
    public function getGifteeEmail()
    {
        return $this->container['giftee_email'];
    }

    /**
     * Sets giftee_email
     *
     * @param string $giftee_email giftee_email
     *
     * @return $this
     */
    public function setGifteeEmail($giftee_email)
    {
        $this->container['giftee_email'] = $giftee_email;

        return $this;
    }

    /**
     * Gets gift_deliver_at
     *
     * @return \DateTime
     */
    public function getGiftDeliverAt()
    {
        return $this->container['gift_deliver_at'];
    }

    /**
     * Sets gift_deliver_at
     *
     * @param \DateTime $gift_deliver_at gift_deliver_at
     *
     * @return $this
     */
    public function setGiftDeliverAt($gift_deliver_at)
    {
        $this->container['gift_deliver_at'] = $gift_deliver_at;

        return $this;
    }

    /**
     * Gets business_name
     *
     * @return string
     */
    public function getBusinessName()
    {
        return $this->container['business_name'];
    }

    /**
     * Sets business_name
     *
     * @param string $business_name business_name
     *
     * @return $this
     */
    public function setBusinessName($business_name)
    {
        $this->container['business_name'] = $business_name;

        return $this;
    }

    /**
     * Gets business_vat_number
     *
     * @return string
     */
    public function getBusinessVatNumber()
    {
        return $this->container['business_vat_number'];
    }

    /**
     * Sets business_vat_number
     *
     * @param string $business_vat_number business_vat_number
     *
     * @return $this
     */
    public function setBusinessVatNumber($business_vat_number)
    {
        $this->container['business_vat_number'] = $business_vat_number;

        return $this;
    }

    /**
     * Gets shipping_address1
     *
     * @return string
     */
    public function getShippingAddress1()
    {
        return $this->container['shipping_address1'];
    }

    /**
     * Sets shipping_address1
     *
     * @param string $shipping_address1 shipping_address1
     *
     * @return $this
     */
    public function setShippingAddress1($shipping_address1)
    {
        $this->container['shipping_address1'] = $shipping_address1;

        return $this;
    }

    /**
     * Gets shipping_address2
     *
     * @return string
     */
    public function getShippingAddress2()
    {
        return $this->container['shipping_address2'];
    }

    /**
     * Sets shipping_address2
     *
     * @param string $shipping_address2 shipping_address2
     *
     * @return $this
     */
    public function setShippingAddress2($shipping_address2)
    {
        $this->container['shipping_address2'] = $shipping_address2;

        return $this;
    }

    /**
     * Gets shipping_city
     *
     * @return string
     */
    public function getShippingCity()
    {
        return $this->container['shipping_city'];
    }

    /**
     * Sets shipping_city
     *
     * @param string $shipping_city shipping_city
     *
     * @return $this
     */
    public function setShippingCity($shipping_city)
    {
        $this->container['shipping_city'] = $shipping_city;

        return $this;
    }

    /**
     * Gets shipping_region
     *
     * @return string
     */
    public function getShippingRegion()
    {
        return $this->container['shipping_region'];
    }

    /**
     * Sets shipping_region
     *
     * @param string $shipping_region shipping_region
     *
     * @return $this
     */
    public function setShippingRegion($shipping_region)
    {
        $this->container['shipping_region'] = $shipping_region;

        return $this;
    }

    /**
     * Gets shipping_postcode
     *
     * @return string
     */
    public function getShippingPostcode()
    {
        return $this->container['shipping_postcode'];
    }

    /**
     * Sets shipping_postcode
     *
     * @param string $shipping_postcode shipping_postcode
     *
     * @return $this
     */
    public function setShippingPostcode($shipping_postcode)
    {
        $this->container['shipping_postcode'] = $shipping_postcode;

        return $this;
    }

    /**
     * Gets shipping_country
     *
     * @return string
     */
    public function getShippingCountry()
    {
        return $this->container['shipping_country'];
    }

    /**
     * Sets shipping_country
     *
     * @param string $shipping_country shipping_country
     *
     * @return $this
     */
    public function setShippingCountry($shipping_country)
    {
        $this->container['shipping_country'] = $shipping_country;

        return $this;
    }

    /**
     * Gets billing_address1
     *
     * @return string
     */
    public function getBillingAddress1()
    {
        return $this->container['billing_address1'];
    }

    /**
     * Sets billing_address1
     *
     * @param string $billing_address1 billing_address1
     *
     * @return $this
     */
    public function setBillingAddress1($billing_address1)
    {
        $this->container['billing_address1'] = $billing_address1;

        return $this;
    }

    /**
     * Gets billing_address2
     *
     * @return string
     */
    public function getBillingAddress2()
    {
        return $this->container['billing_address2'];
    }

    /**
     * Sets billing_address2
     *
     * @param string $billing_address2 billing_address2
     *
     * @return $this
     */
    public function setBillingAddress2($billing_address2)
    {
        $this->container['billing_address2'] = $billing_address2;

        return $this;
    }

    /**
     * Gets billing_city
     *
     * @return string
     */
    public function getBillingCity()
    {
        return $this->container['billing_city'];
    }

    /**
     * Sets billing_city
     *
     * @param string $billing_city billing_city
     *
     * @return $this
     */
    public function setBillingCity($billing_city)
    {
        $this->container['billing_city'] = $billing_city;

        return $this;
    }

    /**
     * Gets billing_region
     *
     * @return string
     */
    public function getBillingRegion()
    {
        return $this->container['billing_region'];
    }

    /**
     * Sets billing_region
     *
     * @param string $billing_region billing_region
     *
     * @return $this
     */
    public function setBillingRegion($billing_region)
    {
        $this->container['billing_region'] = $billing_region;

        return $this;
    }

    /**
     * Gets billing_postcode
     *
     * @return string
     */
    public function getBillingPostcode()
    {
        return $this->container['billing_postcode'];
    }

    /**
     * Sets billing_postcode
     *
     * @param string $billing_postcode billing_postcode
     *
     * @return $this
     */
    public function setBillingPostcode($billing_postcode)
    {
        $this->container['billing_postcode'] = $billing_postcode;

        return $this;
    }

    /**
     * Gets billing_country
     *
     * @return string
     */
    public function getBillingCountry()
    {
        return $this->container['billing_country'];
    }

    /**
     * Sets billing_country
     *
     * @param string $billing_country billing_country
     *
     * @return $this
     */
    public function setBillingCountry($billing_country)
    {
        $this->container['billing_country'] = $billing_country;

        return $this;
    }

    /**
     * Gets eu_resolved_country
     *
     * @return string
     */
    public function getEuResolvedCountry()
    {
        return $this->container['eu_resolved_country'];
    }

    /**
     * Sets eu_resolved_country
     *
     * @param string $eu_resolved_country eu_resolved_country
     *
     * @return $this
     */
    public function setEuResolvedCountry($eu_resolved_country)
    {
        $this->container['eu_resolved_country'] = $eu_resolved_country;

        return $this;
    }

    /**
     * Gets buyer_ip_address
     *
     * @return string
     */
    public function getBuyerIpAddress()
    {
        return $this->container['buyer_ip_address'];
    }

    /**
     * Sets buyer_ip_address
     *
     * @param string $buyer_ip_address buyer_ip_address
     *
     * @return $this
     */
    public function setBuyerIpAddress($buyer_ip_address)
    {
        $this->container['buyer_ip_address'] = $buyer_ip_address;

        return $this;
    }

    /**
     * Gets settled_currency
     *
     * @return string
     */
    public function getSettledCurrency()
    {
        return $this->container['settled_currency'];
    }

    /**
     * Sets settled_currency
     *
     * @param string $settled_currency settled_currency
     *
     * @return $this
     */
    public function setSettledCurrency($settled_currency)
    {
        $this->container['settled_currency'] = $settled_currency;

        return $this;
    }

    /**
     * Gets settled_gross
     *
     * @return float
     */
    public function getSettledGross()
    {
        return $this->container['settled_gross'];
    }

    /**
     * Sets settled_gross
     *
     * @param float $settled_gross settled_gross
     *
     * @return $this
     */
    public function setSettledGross($settled_gross)
    {
        $this->container['settled_gross'] = $settled_gross;

        return $this;
    }

    /**
     * Gets settled_gateway_fee
     *
     * @return float
     */
    public function getSettledGatewayFee()
    {
        return $this->container['settled_gateway_fee'];
    }

    /**
     * Sets settled_gateway_fee
     *
     * @param float $settled_gateway_fee settled_gateway_fee
     *
     * @return $this
     */
    public function setSettledGatewayFee($settled_gateway_fee)
    {
        $this->container['settled_gateway_fee'] = $settled_gateway_fee;

        return $this;
    }

    /**
     * Gets settled_tax
     *
     * @return float
     */
    public function getSettledTax()
    {
        return $this->container['settled_tax'];
    }

    /**
     * Sets settled_tax
     *
     * @param float $settled_tax settled_tax
     *
     * @return $this
     */
    public function setSettledTax($settled_tax)
    {
        $this->container['settled_tax'] = $settled_tax;

        return $this;
    }

    /**
     * Gets accounted_tax
     *
     * @return float
     */
    public function getAccountedTax()
    {
        return $this->container['accounted_tax'];
    }

    /**
     * Sets accounted_tax
     *
     * @param float $accounted_tax accounted_tax
     *
     * @return $this
     */
    public function setAccountedTax($accounted_tax)
    {
        $this->container['accounted_tax'] = $accounted_tax;

        return $this;
    }

    /**
     * Gets settled_handling
     *
     * @return float
     */
    public function getSettledHandling()
    {
        return $this->container['settled_handling'];
    }

    /**
     * Sets settled_handling
     *
     * @param float $settled_handling settled_handling
     *
     * @return $this
     */
    public function setSettledHandling($settled_handling)
    {
        $this->container['settled_handling'] = $settled_handling;

        return $this;
    }

    /**
     * Gets settled_shipping
     *
     * @return float
     */
    public function getSettledShipping()
    {
        return $this->container['settled_shipping'];
    }

    /**
     * Sets settled_shipping
     *
     * @param float $settled_shipping settled_shipping
     *
     * @return $this
     */
    public function setSettledShipping($settled_shipping)
    {
        $this->container['settled_shipping'] = $settled_shipping;

        return $this;
    }

    /**
     * Gets settled_affiliate_fee
     *
     * @return float
     */
    public function getSettledAffiliateFee()
    {
        return $this->container['settled_affiliate_fee'];
    }

    /**
     * Sets settled_affiliate_fee
     *
     * @param float $settled_affiliate_fee settled_affiliate_fee
     *
     * @return $this
     */
    public function setSettledAffiliateFee($settled_affiliate_fee)
    {
        $this->container['settled_affiliate_fee'] = $settled_affiliate_fee;

        return $this;
    }

    /**
     * Gets discount
     *
     * @return float
     */
    public function getDiscount()
    {
        return $this->container['discount'];
    }

    /**
     * Sets discount
     *
     * @param float $discount discount
     *
     * @return $this
     */
    public function setDiscount($discount)
    {
        $this->container['discount'] = $discount;

        return $this;
    }

    /**
     * Gets price_at_checkout
     *
     * @return float
     */
    public function getPriceAtCheckout()
    {
        return $this->container['price_at_checkout'];
    }

    /**
     * Sets price_at_checkout
     *
     * @param float $price_at_checkout price_at_checkout
     *
     * @return $this
     */
    public function setPriceAtCheckout($price_at_checkout)
    {
        $this->container['price_at_checkout'] = $price_at_checkout;

        return $this;
    }

    /**
     * Gets refunded
     *
     * @return bool
     */
    public function getRefunded()
    {
        return $this->container['refunded'];
    }

    /**
     * Sets refunded
     *
     * @param bool $refunded refunded
     *
     * @return $this
     */
    public function setRefunded($refunded)
    {
        $this->container['refunded'] = $refunded;

        return $this;
    }

    /**
     * Gets affiliate_system
     *
     * @return string
     */
    public function getAffiliateSystem()
    {
        return $this->container['affiliate_system'];
    }

    /**
     * Sets affiliate_system
     *
     * @param string $affiliate_system affiliate_system
     *
     * @return $this
     */
    public function setAffiliateSystem($affiliate_system)
    {
        $this->container['affiliate_system'] = $affiliate_system;

        return $this;
    }

    /**
     * Gets can_market_to_buyer
     *
     * @return bool
     */
    public function getCanMarketToBuyer()
    {
        return $this->container['can_market_to_buyer'];
    }

    /**
     * Sets can_market_to_buyer
     *
     * @param bool $can_market_to_buyer can_market_to_buyer
     *
     * @return $this
     */
    public function setCanMarketToBuyer($can_market_to_buyer)
    {
        $this->container['can_market_to_buyer'] = $can_market_to_buyer;

        return $this;
    }

    /**
     * Gets gateway_transaction_ids
     *
     * @return string[]
     */
    public function getGatewayTransactionIds()
    {
        return $this->container['gateway_transaction_ids'];
    }

    /**
     * Sets gateway_transaction_ids
     *
     * @param string[] $gateway_transaction_ids gateway_transaction_ids
     *
     * @return $this
     */
    public function setGatewayTransactionIds($gateway_transaction_ids)
    {
        $this->container['gateway_transaction_ids'] = $gateway_transaction_ids;

        return $this;
    }

    /**
     * Gets order_name
     *
     * @return string
     */
    public function getOrderName()
    {
        return $this->container['order_name'];
    }

    /**
     * Sets order_name
     *
     * @param string $order_name order_name
     *
     * @return $this
     */
    public function setOrderName($order_name)
    {
        $this->container['order_name'] = $order_name;

        return $this;
    }

    /**
     * Gets download_url
     *
     * @return string
     */
    public function getDownloadUrl()
    {
        return $this->container['download_url'];
    }

    /**
     * Sets download_url
     *
     * @param string $download_url download_url
     *
     * @return $this
     */
    public function setDownloadUrl($download_url)
    {
        $this->container['download_url'] = $download_url;

        return $this;
    }

    /**
     * Gets subscription_management_url
     *
     * @return string
     */
    public function getSubscriptionManagementUrl()
    {
        return $this->container['subscription_management_url'];
    }

    /**
     * Sets subscription_management_url
     *
     * @param string $subscription_management_url subscription_management_url
     *
     * @return $this
     */
    public function setSubscriptionManagementUrl($subscription_management_url)
    {
        $this->container['subscription_management_url'] = $subscription_management_url;

        return $this;
    }

    /**
     * Gets valid_until
     *
     * @return \DateTime
     */
    public function getValidUntil()
    {
        return $this->container['valid_until'];
    }

    /**
     * Sets valid_until
     *
     * @param \DateTime $valid_until valid_until
     *
     * @return $this
     */
    public function setValidUntil($valid_until)
    {
        $this->container['valid_until'] = $valid_until;

        return $this;
    }

    /**
     * Gets download_attempts
     *
     * @return int
     */
    public function getDownloadAttempts()
    {
        return $this->container['download_attempts'];
    }

    /**
     * Sets download_attempts
     *
     * @param int $download_attempts download_attempts
     *
     * @return $this
     */
    public function setDownloadAttempts($download_attempts)
    {
        $this->container['download_attempts'] = $download_attempts;

        return $this;
    }

    /**
     * Gets access_allowed
     *
     * @return bool
     */
    public function getAccessAllowed()
    {
        return $this->container['access_allowed'];
    }

    /**
     * Sets access_allowed
     *
     * @param bool $access_allowed access_allowed
     *
     * @return $this
     */
    public function setAccessAllowed($access_allowed)
    {
        $this->container['access_allowed'] = $access_allowed;

        return $this;
    }

    /**
     * Gets dispatched_at
     *
     * @return \DateTime
     */
    public function getDispatchedAt()
    {
        return $this->container['dispatched_at'];
    }

    /**
     * Sets dispatched_at
     *
     * @param \DateTime $dispatched_at dispatched_at
     *
     * @return $this
     */
    public function setDispatchedAt($dispatched_at)
    {
        $this->container['dispatched_at'] = $dispatched_at;

        return $this;
    }

    /**
     * Gets tag
     *
     * @return string
     */
    public function getTag()
    {
        return $this->container['tag'];
    }

    /**
     * Sets tag
     *
     * @param string $tag tag
     *
     * @return $this
     */
    public function setTag($tag)
    {
        $this->container['tag'] = $tag;

        return $this;
    }

    /**
     * Gets order_custom_checkout_fields
     *
     * @return object[]
     */
    public function getOrderCustomCheckoutFields()
    {
        return $this->container['order_custom_checkout_fields'];
    }

    /**
     * Sets order_custom_checkout_fields
     *
     * @param object[] $order_custom_checkout_fields order_custom_checkout_fields
     *
     * @return $this
     */
    public function setOrderCustomCheckoutFields($order_custom_checkout_fields)
    {
        $this->container['order_custom_checkout_fields'] = $order_custom_checkout_fields;

        return $this;
    }

    /**
     * Gets download_items
     *
     * @return object[]
     */
    public function getDownloadItems()
    {
        return $this->container['download_items'];
    }

    /**
     * Sets download_items
     *
     * @param object[] $download_items download_items
     *
     * @return $this
     */
    public function setDownloadItems($download_items)
    {
        $this->container['download_items'] = $download_items;

        return $this;
    }

    /**
     * Gets downloads
     *
     * @return object[]
     */
    public function getDownloads()
    {
        return $this->container['downloads'];
    }

    /**
     * Sets downloads
     *
     * @param object[] $downloads downloads
     *
     * @return $this
     */
    public function setDownloads($downloads)
    {
        $this->container['downloads'] = $downloads;

        return $this;
    }

    /**
     * Gets created_at
     *
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param \DateTime $created_at created_at
     *
     * @return $this
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets updated_at
     *
     * @return \DateTime
     */
    public function getUpdatedAt()
    {
        return $this->container['updated_at'];
    }

    /**
     * Sets updated_at
     *
     * @param \DateTime $updated_at updated_at
     *
     * @return $this
     */
    public function setUpdatedAt($updated_at)
    {
        $this->container['updated_at'] = $updated_at;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
